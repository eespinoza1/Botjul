require('dotenv').config();
const TelegramBot = require('node-telegram-bot-api');
const { guardarReporte, guardarPregunta } = require('./controllers/botController');

const bot = new TelegramBot(process.env.TELEGRAM_BOT_TOKEN, { polling: true });
console.log('ü§ñ Vecino Julio Bot est√° corriendo...');

// Estados para los flujos
const estadoReporte = new Map();     // Flujo de reportar problemas
const esperandoPregunta = new Map(); // Flujo de hacer preguntas

// Mensaje de cierre est√°ndar
const mensajeCierre = `
üôè ¬°Gracias por comunicarte con nosotros!

üó≥Ô∏è Recuerda: *Este 25 de mayo vota por Fuerza Vecinal* para construir juntos un mejor Aragua.

Atentamente,  
*Candidato a Diputado Julio S√°nchez Regalado*
`;

// Mensaje de bienvenida
bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  bot.sendMessage(chatId, `
üëãüèº ¬°Hola! Soy *Vecino Julio Bot*, el canal directo con Julio S√°nchez Regalado.

¬øQu√© quieres hacer hoy?
1Ô∏è‚É£ Con√≥ceme.
2Ô∏è‚É£ Reportar un problema.
3Ô∏è‚É£ Hacer una pregunta.
4Ô∏è‚É£ Saber c√≥mo votar.

Escribe el n√∫mero o la opci√≥n.`, { parse_mode: 'Markdown' });
});

// Flujo general
bot.on('message', async (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text?.toLowerCase();

  // Evitar procesar /start aqu√≠
  if (text === '/start') return;

  // -------------------- FLUJO DE PREGUNTAS --------------------
  if (esperandoPregunta.has(chatId)) {
    const pregunta = msg.text;
    const nombre = msg.from.first_name;

    await guardarPregunta(chatId, nombre, pregunta);
    bot.sendMessage(chatId, '‚úÖ ¬°Gracias por tu pregunta! Julio o su equipo te responder√°n pronto.');
    bot.sendMessage(chatId, mensajeCierre, { parse_mode: 'Markdown' });
    esperandoPregunta.delete(chatId);
    return;
  }

  // -------------------- FLUJO DE REPORTES --------------------
  if (msg.location) {
    if (estadoReporte.has(chatId)) {
      const estado = estadoReporte.get(chatId);
      const { latitude, longitude } = msg.location;

      await guardarReporte(chatId, estado.tipo_problema, latitude, longitude);
      bot.sendMessage(chatId, `‚úÖ ¬°Gracias! El reporte de *${estado.tipo_problema}* fue registrado.`, { parse_mode: 'Markdown' });
      bot.sendMessage(chatId, mensajeCierre, { parse_mode: 'Markdown' });
      estadoReporte.delete(chatId);
      return;
    }
  }

  // -------------------- MEN√ö PRINCIPAL --------------------
  switch (text) {
    // -------------------- CON√ìCEME --------------------
    case '1':
    case 'con√≥ceme':
      bot.sendMessage(chatId, `üôã‚Äç‚ôÇÔ∏è *Con√≥ceme: Julio S√°nchez Regalado*  

üîπ *Abogado* egresado de la *Universidad Bicentenaria de Aragua (UBA)*.  
üîπ M√°s de *15 a√±os de experiencia comunitaria* resolviendo problemas reales como asfaltado de calles y recuperaci√≥n de espacios p√∫blicos.  
üîπ *Promotor de la participaci√≥n ciudadana* y la *justicia social*, trabajando mano a mano con los vecinos para lograr cambios concretos.

ü§ù *¬øPor qu√© ser√© un gran diputado?*  
‚úîÔ∏è Porque vengo del trabajo directo en las calles, no de promesas vac√≠as.  
‚úîÔ∏è Porque creo en *recuperar las instituciones* para que sirvan al pueblo.  
‚úîÔ∏è Porque quiero llevar *la voz de Maracay y Aragua* a la Asamblea Nacional con propuestas claras y ejecutables.

üíô *Candidato por Fuerza Vecinal*, comprometido con construir un futuro mejor para todos.

¬°Con√≥ceme m√°s y construyamos juntos el cambio que Aragua merece! üí™`, { parse_mode: 'Markdown' });
      bot.sendMessage(chatId, mensajeCierre, { parse_mode: 'Markdown' });
      break;

    // -------------------- REPORTAR UN PROBLEMA --------------------
    case '2':
    case 'problema':
      bot.sendMessage(chatId, 'üöß ¬øQu√© tipo de problema quieres reportar?\n\nüö® Seguridad\nüí° Alumbrado\nüö∞ Agua\nüï≥Ô∏è Huecos\nüóëÔ∏è Basura');
      estadoReporte.set(chatId, { tipo_problema: '', latitud: '', longitud: '' });
      break;

    case 'seguridad':
    case 'alumbrado':
    case 'agua':
    case 'huecos':
    case 'basura':
      if (estadoReporte.has(chatId)) {
        const estado = estadoReporte.get(chatId);
        estado.tipo_problema = text;
        estadoReporte.set(chatId, estado);
        bot.sendMessage(chatId, `üìç Ahora, env√≠ame la ubicaci√≥n del problema de *${text}* para registrarlo.`);
      }
      break;

    // -------------------- HACER UNA PREGUNTA --------------------
    case '3':
    case 'pregunta':
      bot.sendMessage(chatId, 'üì© ¬°Perfecto! Escr√≠beme tu pregunta y la enviar√© a Julio.');
      esperandoPregunta.set(chatId, true);
      break;

    // -------------------- SABER C√ìMO VOTAR --------------------
    case '4':
    case 'votar':
      bot.sendPhoto(chatId, './images/vota27may.jpeg', {
        caption: 'üó≥Ô∏è Este 25 de mayo sigue estos pasos para votar por *Julio S√°nchez Regalado* con *Fuerza Vecinal*.\n\n1Ô∏è‚É£ Pulsa sobre la tarjeta de *Fuerza Vecinal* (arriba y a la derecha).\n2Ô∏è‚É£ Luego presiona el bot√≥n *Votar*.\n\n¬°Vota con FUERZA! üí™',
        parse_mode: 'Markdown'
      }).then(() => {
        bot.sendMessage(chatId, mensajeCierre, { parse_mode: 'Markdown' });
      });
      break;

    default:
      // Puedes agregar aqu√≠ un mensaje gen√©rico si el usuario escribe algo que no entiende
      break;
  }
});
